# =====================================================================
#     #######  #####          #     #   ###   #     # #     #   ###
#     #       #     #         #     #    #    ##    # ##    #    #
#     #       #               #     #    #    # #   # # #   #    #
#      #####  #  ####  #####  #     #    #    #  #  # #  #  #    #
#           # #     #          #   #     #    #   # # #   # #    #
#     #     # #     #           # #      #    #    ## #    ##    #
#      #####   #####             #      ###   #     # #     #   ###
# =====================================================================
#
# SimulaMet OpenAirInterface Evolved Packet Core VNF and NS
# Copyright (C) 2019-2020 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
# Standard OSM functions
start:
  description: "Stop the service on the VNF."
stop:
  description: "Stop the service on the VNF."
restart:
  description: "Stop the service on the VNF."
reboot:
  description: "Reboot the VNF virtual machine."
upgrade:
  description: "Upgrade the software on the VNF."

# Required by charms.osm.sshproxy
run:
    description: "Run an arbitrary command"
    params:
        command:
            description: "The command to execute."
            type: string
            default: ""
    required:
        - command
generate-ssh-key:
    description: "Generate a new SSH keypair for this unit. This will replace any existing previously generated keypair."
verify-ssh-credentials:
    description: "Verify that this unit can authenticate with server specified by ssh-hostname and ssh-username."
get-ssh-public-key:
    description: "Get the public SSH key for this unit."


prepare-spgwc-build:
  description: Prepares SPGW-C sources
  params:
    spgwc-git-repository:
      description: SPGW-C Git repository
      type: string
      default: https://github.com/OPENAIRINTERFACE/openair-cn-cups.git
    spgwc-git-commit:
      description: SPGW-C Git commit
      type: string
      default: develop
  required:
    - spgwc-git-repository
    - spgwc-git-commit

configure-spgwc:
  description: Configures the SPGW-C
  params:
    network-realm:
      description: Network realm
      type: string
      default: ntnu.no
    network-ipv4-dns1:
      description: Network DNS 1
      data-type: string
      default: 10.1.1.1
    network-ipv4-dns2:
      description: Network DNS 2
      data-type: string
      default: 10.1.2.1
  required:
    - network-realm
    - network-ipv4-dns1
    - network-ipv4-dns2

restart-spgwc:
  description: Restarts the SPGW-C

generatekeys:
  description: "generates wireguard keys"
generatewgconfig:
  description: "generates wireguard config"
  params:
        tunnel-subnet:
            description: "subnets the other side should allow for in Allowed IPs"
            type: string
            default: ""
  required:
        - tunnel-subnet
wgup:
  description: "bring up wireguard"
wgaddpeer:
  description: "add peer to wireguard config"
  params:
        peer-publickey:
            description: "publickey of a peer"
            type: string
            default: ""
        subnet-behind-tunnel:
            description: "subnet to allow from other side of the wg tunnel"
            type: string
            default: ""
        wg-interface:
            description: "interface name"
            type: string
            default: "wg0"        
        listenport:
            description: "port to listen on"
            type: string
            default: "51820"        
  required:
        - peer-publickey
        - subnet-behind-tunnel
wgdelpeer:
  description: "delete peer from wireguard config"

wgrestart:
  description: "restarts the wireguard service"
  params:
        wg-interface:
            description: "interface to restart"
            type: string
            default: "wg0"
